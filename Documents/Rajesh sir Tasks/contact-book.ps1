{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Connected to Python 3.12.4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f4c35d02-8eb5-46ad-a7c0-3c192c29ba46",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Contact Book Menu\n",
      "1. Add a Contact\n",
      "2. Delete a Contact\n",
      "3. Search for a Contact\n",
      "4. View all contacts\n",
      "5. Exit\n",
      "Contact 'Shreya' added successfully.\n",
      "Contact Book Menu\n",
      "1. Add a Contact\n",
      "2. Delete a Contact\n",
      "3. Search for a Contact\n",
      "4. View all contacts\n",
      "5. Exit\n",
      "Contact 'Phani' added successfully.\n",
      "Contact Book Menu\n",
      "1. Add a Contact\n",
      "2. Delete a Contact\n",
      "3. Search for a Contact\n",
      "4. View all contacts\n",
      "5. Exit\n",
      "=== All Contacts ===\n",
      "Shreya: 9886016738\n",
      "Phani: 8971709740\n",
      "====================\n",
      "Contact Book Menu\n",
      "1. Add a Contact\n",
      "2. Delete a Contact\n",
      "3. Search for a Contact\n",
      "4. View all contacts\n",
      "5. Exit\n",
      "=== All Contacts ===\n",
      "Shreya: 9886016738\n",
      "Phani: 8971709740\n",
      "====================\n",
      "Contact Book Menu\n",
      "1. Add a Contact\n",
      "2. Delete a Contact\n",
      "3. Search for a Contact\n",
      "4. View all contacts\n",
      "5. Exit\n",
      "Contact 'phani' does not exist in the contact book.\n",
      "Contact Book Menu\n",
      "1. Add a Contact\n",
      "2. Delete a Contact\n",
      "3. Search for a Contact\n",
      "4. View all contacts\n",
      "5. Exit\n",
      "Invalid choice. Please enter a number between 1 and 5.\n",
      "Contact Book Menu\n",
      "1. Add a Contact\n",
      "2. Delete a Contact\n",
      "3. Search for a Contact\n",
      "4. View all contacts\n",
      "5. Exit\n",
      "Contact found: Phani - 8971709740\n",
      "Contact Book Menu\n",
      "1. Add a Contact\n",
      "2. Delete a Contact\n",
      "3. Search for a Contact\n",
      "4. View all contacts\n",
      "5. Exit\n",
      "Exiting the program. Goodbye!\n"
     ]
    }
   ],
   "source": [
    "def display_menu():\n",
    "    print(\"Contact Book Menu\")\n",
    "    print(\"1. Add a Contact\")\n",
    "    print(\"2. Delete a Contact\")\n",
    "    print(\"3. Search for a Contact\")\n",
    "    print(\"4. View all contacts\")\n",
    "    print(\"5. Exit\")\n",
    "\n",
    "\n",
    "def add_contact(contact_book):\n",
    "    name = input(\"Enter the contact name: \")\n",
    "    phone_number = input(\"Enter the phone number: \")\n",
    "\n",
    "    if name in contact_book:\n",
    "        print(f\"Contact '{name}' already exists.\")\n",
    "    else:\n",
    "        contact_book[name] = phone_number\n",
    "        print(f\"Contact '{name}' added successfully.\")\n",
    "\n",
    "\n",
    "def delete_contact(contact_book):\n",
    "    name = input(\"Enter the contact name to delete: \")\n",
    "\n",
    "    if name in contact_book:\n",
    "        del contact_book[name]\n",
    "        print(f\"Contact '{name}' deleted successfully.\")\n",
    "    else:\n",
    "        print(f\"Contact '{name}' does not exist in the contact book.\")\n",
    "\n",
    "\n",
    "def search_contact(contact_book):\n",
    "    name = input(\"Enter the contact name to search: \")\n",
    "\n",
    "    if name in contact_book:\n",
    "        print(f\"Contact found: {name} - {contact_book[name]}\")\n",
    "    else:\n",
    "        print(f\"Contact '{name}' does not exist in the contact book.\")\n",
    "        \n",
    "def view_all_contacts(contact_book):\n",
    "    if not contact_book:\n",
    "        print(\"No contacts found in the contact book.\")\n",
    "    else:\n",
    "        print(\"=== All Contacts ===\")\n",
    "        for name, phone_number in contact_book.items():\n",
    "            print(f\"{name}: {phone_number}\")\n",
    "        print(\"====================\")\n",
    "        \n",
    "def main():\n",
    "    # Create an empty dictionary to store contacts\n",
    "    contact_book = {}\n",
    "\n",
    "    while True:\n",
    "        # Display the menu\n",
    "        display_menu()\n",
    "\n",
    "        # Prompt the user to choose an option\n",
    "        choice = input(\"Enter your choice (1-5): \")\n",
    "\n",
    "        # Handle the user's choice\n",
    "        if choice == '1':\n",
    "            add_contact(contact_book)\n",
    "        elif choice == '2':\n",
    "            delete_contact(contact_book)\n",
    "        elif choice == '3':\n",
    "            search_contact(contact_book)\n",
    "        elif choice == '4':\n",
    "            view_all_contacts(contact_book)\n",
    "        elif choice == '5':\n",
    "            print(\"Exiting the program. Goodbye!\")\n",
    "            break  # Exit the loop and end the program\n",
    "        else:\n",
    "            print(\"Invalid choice. Please enter a number between 1 and 5.\")\n",
    "\n",
    "\n",
    "# Start the program\n",
    "if __name__ == \"__main__\":\n",
    "    main()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "name": "python",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
